{"/workspaces/claude-code-flow/src/ui/extension/src/managers/ChatManager.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/managers/ChatManager.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":30}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":35}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":16}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":55}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":43}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":34}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":36}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":34}},"11":{"start":{"line":17,"column":8},"end":{"line":19,"column":11}},"12":{"start":{"line":18,"column":12},"end":{"line":18,"column":43}},"13":{"start":{"line":20,"column":8},"end":{"line":22,"column":11}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":38}},"15":{"start":{"line":25,"column":26},"end":{"line":25,"column":42}},"16":{"start":{"line":26,"column":24},"end":{"line":32,"column":9}},"17":{"start":{"line":33,"column":8},"end":{"line":33,"column":46}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":41}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":48}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":25}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":36}},"22":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"23":{"start":{"line":43,"column":12},"end":{"line":43,"column":62}},"24":{"start":{"line":45,"column":8},"end":{"line":45,"column":41}},"25":{"start":{"line":46,"column":8},"end":{"line":46,"column":48}},"26":{"start":{"line":49,"column":8},"end":{"line":49,"column":44}},"27":{"start":{"line":52,"column":24},"end":{"line":52,"column":52}},"28":{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},"29":{"start":{"line":54,"column":12},"end":{"line":54,"column":34}},"30":{"start":{"line":55,"column":12},"end":{"line":55,"column":43}},"31":{"start":{"line":56,"column":12},"end":{"line":56,"column":52}},"32":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"33":{"start":{"line":61,"column":12},"end":{"line":61,"column":33}},"34":{"start":{"line":63,"column":24},"end":{"line":63,"column":63}},"35":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"36":{"start":{"line":65,"column":12},"end":{"line":65,"column":49}},"37":{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},"38":{"start":{"line":69,"column":12},"end":{"line":69,"column":32}},"39":{"start":{"line":70,"column":12},"end":{"line":70,"column":60}},"40":{"start":{"line":73,"column":28},"end":{"line":78,"column":9}},"41":{"start":{"line":80,"column":8},"end":{"line":80,"column":43}},"42":{"start":{"line":81,"column":8},"end":{"line":81,"column":39}},"43":{"start":{"line":83,"column":8},"end":{"line":83,"column":103}},"44":{"start":{"line":85,"column":8},"end":{"line":85,"column":47}},"45":{"start":{"line":87,"column":8},"end":{"line":93,"column":9}},"46":{"start":{"line":88,"column":12},"end":{"line":88,"column":73}},"47":{"start":{"line":91,"column":12},"end":{"line":91,"column":38}},"48":{"start":{"line":92,"column":12},"end":{"line":92,"column":24}},"49":{"start":{"line":96,"column":24},"end":{"line":96,"column":63}},"50":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"51":{"start":{"line":98,"column":12},"end":{"line":98,"column":49}},"52":{"start":{"line":100,"column":33},"end":{"line":106,"column":9}},"53":{"start":{"line":107,"column":8},"end":{"line":107,"column":48}},"54":{"start":{"line":108,"column":8},"end":{"line":108,"column":63}},"55":{"start":{"line":109,"column":8},"end":{"line":123,"column":9}},"56":{"start":{"line":110,"column":12},"end":{"line":113,"column":13}},"57":{"start":{"line":111,"column":16},"end":{"line":111,"column":50}},"58":{"start":{"line":112,"column":16},"end":{"line":112,"column":49}},"59":{"start":{"line":114,"column":12},"end":{"line":114,"column":56}},"60":{"start":{"line":115,"column":12},"end":{"line":115,"column":43}},"61":{"start":{"line":117,"column":12},"end":{"line":117,"column":117}},"62":{"start":{"line":118,"column":12},"end":{"line":118,"column":70}},"63":{"start":{"line":121,"column":12},"end":{"line":121,"column":45}},"64":{"start":{"line":122,"column":12},"end":{"line":122,"column":24}},"65":{"start":{"line":126,"column":24},"end":{"line":126,"column":52}},"66":{"start":{"line":127,"column":8},"end":{"line":127,"column":52}},"67":{"start":{"line":130,"column":24},"end":{"line":130,"column":63}},"68":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"69":{"start":{"line":132,"column":12},"end":{"line":132,"column":19}},"70":{"start":{"line":134,"column":29},"end":{"line":143,"column":9}},"71":{"start":{"line":144,"column":8},"end":{"line":144,"column":44}},"72":{"start":{"line":145,"column":8},"end":{"line":145,"column":39}},"73":{"start":{"line":146,"column":8},"end":{"line":146,"column":49}},"74":{"start":{"line":149,"column":8},"end":{"line":149,"column":34}},"75":{"start":{"line":150,"column":8},"end":{"line":150,"column":30}},"76":{"start":{"line":151,"column":8},"end":{"line":151,"column":36}},"77":{"start":{"line":154,"column":0},"end":{"line":154,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":52},"end":{"line":15,"column":5}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":25},"end":{"line":23,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":53},"end":{"line":17,"column":54}},"loc":{"start":{"line":17,"column":64},"end":{"line":19,"column":9}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":45},"end":{"line":20,"column":46}},"loc":{"start":{"line":20,"column":56},"end":{"line":22,"column":9}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":20},"end":{"line":37,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":23},"end":{"line":40,"column":5}},"line":38},"6":{"name":"(anonymous_6)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":32},"end":{"line":47,"column":5}},"line":41},"7":{"name":"(anonymous_7)","decl":{"start":{"line":48,"column":4},"end":{"line":48,"column":5}},"loc":{"start":{"line":48,"column":26},"end":{"line":50,"column":5}},"line":48},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":28},"end":{"line":58,"column":5}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":59,"column":4},"end":{"line":59,"column":5}},"loc":{"start":{"line":59,"column":37},"end":{"line":94,"column":5}},"line":59},"10":{"name":"(anonymous_10)","decl":{"start":{"line":95,"column":4},"end":{"line":95,"column":5}},"loc":{"start":{"line":95,"column":35},"end":{"line":124,"column":5}},"line":95},"11":{"name":"(anonymous_11)","decl":{"start":{"line":125,"column":4},"end":{"line":125,"column":5}},"loc":{"start":{"line":125,"column":26},"end":{"line":128,"column":5}},"line":125},"12":{"name":"(anonymous_12)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":30},"end":{"line":147,"column":5}},"line":129},"13":{"name":"(anonymous_13)","decl":{"start":{"line":148,"column":4},"end":{"line":148,"column":5}},"loc":{"start":{"line":148,"column":14},"end":{"line":152,"column":5}},"line":148}},"branchMap":{"0":{"loc":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},{"start":{"line":42,"column":8},"end":{"line":44,"column":9}}],"line":42},"1":{"loc":{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":57,"column":9}},{"start":{"line":53,"column":8},"end":{"line":57,"column":9}}],"line":53},"2":{"loc":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},{"start":{"line":60,"column":8},"end":{"line":62,"column":9}}],"line":60},"3":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{"line":64,"column":8},"end":{"line":66,"column":9}}],"line":64},"4":{"loc":{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":71,"column":9}},{"start":{"line":68,"column":8},"end":{"line":71,"column":9}}],"line":68},"5":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"6":{"loc":{"start":{"line":127,"column":15},"end":{"line":127,"column":51}},"type":"cond-expr","locations":[{"start":{"line":127,"column":25},"end":{"line":127,"column":46}},{"start":{"line":127,"column":49},"end":{"line":127,"column":51}}],"line":127},"7":{"loc":{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},"type":"if","locations":[{"start":{"line":131,"column":8},"end":{"line":133,"column":9}},{"start":{"line":131,"column":8},"end":{"line":133,"column":9}}],"line":131}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":17,"6":17,"7":17,"8":17,"9":17,"10":17,"11":17,"12":2,"13":17,"14":1,"15":16,"16":16,"17":16,"18":16,"19":16,"20":16,"21":4,"22":2,"23":1,"24":1,"25":1,"26":2,"27":1,"28":1,"29":1,"30":1,"31":1,"32":7,"33":1,"34":7,"35":7,"36":0,"37":7,"38":1,"39":1,"40":7,"41":7,"42":7,"43":7,"44":7,"45":7,"46":7,"47":1,"48":1,"49":3,"50":3,"51":0,"52":3,"53":3,"54":3,"55":3,"56":3,"57":6,"58":6,"59":3,"60":3,"61":3,"62":3,"63":0,"64":0,"65":4,"66":4,"67":2,"68":2,"69":0,"70":2,"71":2,"72":2,"73":2,"74":18,"75":18,"76":18,"77":1},"f":{"0":17,"1":17,"2":2,"3":1,"4":16,"5":4,"6":2,"7":2,"8":1,"9":7,"10":3,"11":4,"12":2,"13":18},"b":{"0":[1,1],"1":[1,0],"2":[1,6],"3":[0,7],"4":[1,6],"5":[0,3],"6":[4,0],"7":[0,2]},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/managers/ChatManager.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/managers/ChatManager.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventEmitter } from 'events';\nimport { v4 as uuidv4 } from 'uuid';\nimport { IChatManager } from '../interfaces/IChatManager';\nimport { IOrchestratorManager } from '../interfaces/IOrchestratorManager';\nimport { IMemoryManager } from '../interfaces/IMemoryManager';\nimport { ChatSession, Message, OperationMode } from '../types';\n\nexport class ChatManager extends EventEmitter implements IChatManager {\n    private sessions: Map<string, ChatSession> = new Map();\n    private activeSessionId: string | null = null;\n\n    constructor(\n        private orchestratorManager: IOrchestratorManager,\n        private memoryManager: IMemoryManager\n    ) {\n        super();\n        this.setupEventHandlers();\n    }\n\n    private setupEventHandlers(): void {\n        this.orchestratorManager.on('agent-message', (event) => {\n            this.handleAgentMessage(event);\n        });\n\n        this.orchestratorManager.on('error', (error) => {\n            this.emit('error', error);\n        });\n    }\n\n    createSession(): string {\n        const sessionId = uuidv4();\n        const session: ChatSession = {\n            id: sessionId,\n            createdAt: Date.now(),\n            updatedAt: Date.now(),\n            mode: OperationMode.Chat,\n            messages: []\n        };\n\n        this.sessions.set(sessionId, session);\n        this.activeSessionId = sessionId;\n        this.emit('session-created', sessionId);\n\n        return sessionId;\n    }\n\n    getActiveSession(): string | null {\n        return this.activeSessionId;\n    }\n\n    setActiveSession(sessionId: string): void {\n        if (!this.sessions.has(sessionId)) {\n            throw new Error(`Session ${sessionId} not found`);\n        }\n        this.activeSessionId = sessionId;\n        this.emit('session-changed', sessionId);\n    }\n\n    getSession(sessionId: string): ChatSession | undefined {\n        return this.sessions.get(sessionId);\n    }\n\n    clearSession(sessionId: string): void {\n        const session = this.sessions.get(sessionId);\n        if (session) {\n            session.messages = [];\n            session.updatedAt = Date.now();\n            this.emit('session-cleared', sessionId);\n        }\n    }\n\n    async sendMessage(content: string, mode: OperationMode): Promise<void> {\n        if (!this.activeSessionId) {\n            this.createSession();\n        }\n\n        const session = this.sessions.get(this.activeSessionId!);\n        if (!session) {\n            throw new Error('No active session');\n        }\n\n        // Update session mode if different\n        if (session.mode !== mode) {\n            session.mode = mode;\n            await this.orchestratorManager.switchMode(mode);\n        }\n\n        // Create user message\n        const userMessage: Message = {\n            id: uuidv4(),\n            role: 'user',\n            content,\n            timestamp: Date.now()\n        };\n\n        // Add to session history\n        session.messages.push(userMessage);\n        session.updatedAt = Date.now();\n\n        // Store in memory for context\n        await this.memoryManager.store(\n            `session:${session.id}:message:${userMessage.id}`,\n            userMessage\n        );\n\n        // Emit user message event\n        this.emit('user-message', userMessage);\n\n        // Process with orchestrator\n        try {\n            await this.orchestratorManager.processMessage(content, mode);\n        } catch (error) {\n            this.emit('error', error);\n            throw error;\n        }\n    }\n\n    async streamResponse(response: AsyncIterable<string>): Promise<void> {\n        const session = this.sessions.get(this.activeSessionId!);\n        if (!session) {\n            throw new Error('No active session');\n        }\n\n        const assistantMessage: Message = {\n            id: uuidv4(),\n            role: 'assistant',\n            content: '',\n            timestamp: Date.now(),\n            metadata: { streaming: true }\n        };\n\n        session.messages.push(assistantMessage);\n        this.emit('assistant-message-start', assistantMessage);\n\n        try {\n            for await (const chunk of response) {\n                assistantMessage.content += chunk;\n                this.emit('stream-chunk', chunk);\n            }\n\n            assistantMessage.metadata!.streaming = false;\n            session.updatedAt = Date.now();\n\n            // Store completed message\n            await this.memoryManager.store(\n                `session:${session.id}:message:${assistantMessage.id}`,\n                assistantMessage\n            );\n\n            this.emit('assistant-message-complete', assistantMessage);\n        } catch (error) {\n            this.emit('stream-error', error);\n            throw error;\n        }\n    }\n\n    getHistory(sessionId: string): Message[] {\n        const session = this.sessions.get(sessionId);\n        return session ? [...session.messages] : [];\n    }\n\n    private handleAgentMessage(event: any): void {\n        const session = this.sessions.get(this.activeSessionId!);\n        if (!session) {\n            return;\n        }\n\n        const agentMessage: Message = {\n            id: uuidv4(),\n            role: 'assistant',\n            content: event.payload.message,\n            timestamp: Date.now(),\n            metadata: {\n                agent: event.payload.agent,\n                mode: session.mode\n            }\n        };\n\n        session.messages.push(agentMessage);\n        session.updatedAt = Date.now();\n\n        this.emit('agent-message', agentMessage);\n    }\n\n    dispose(): void {\n        this.removeAllListeners();\n        this.sessions.clear();\n        this.activeSessionId = null;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df2048c7333924450307269a26bc49975f2d9e21"},"/workspaces/claude-code-flow/src/ui/extension/src/types/index.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":50}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":44}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":48}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":41}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":48}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":42}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":47}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":8,"2":8,"3":8,"4":8,"5":8,"6":16,"7":8,"8":0,"9":0,"10":0,"11":1,"12":9,"13":8,"14":8,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"f":{"0":8,"1":16,"2":0,"3":9},"b":{"0":[1,1,1],"1":[1,0],"2":[8,0],"3":[8,0],"4":[8,8],"5":[0,8],"6":[8,0],"7":[0,0],"8":[1,1,1],"9":[8,0],"10":[8,8]},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/index.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,kDAAgC;AAChC,4CAA0B;AAC1B,gDAA8B;AAC9B,yCAAuB;AACvB,gDAA8B;AAC9B,0CAAwB;AACxB,yCAAuB;AACvB,+CAA6B;AAC7B,2CAAyB","sourcesContent":["export * from './OperationMode';\nexport * from './Message';\nexport * from './ChatSession';\nexport * from './Task';\nexport * from './SystemEvent';\nexport * from './Agent';\nexport * from './Tool';\nexport * from './Permission';\nexport * from './Memory';"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"fb2f7cd150d55af89e0602257798800c39b932ea"},"/workspaces/claude-code-flow/src/ui/extension/src/types/OperationMode.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/OperationMode.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":66}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":35}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":58}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":48}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":26},"end":{"line":10,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":3},"end":{"line":10,"column":64}},"type":"binary-expr","locations":[{"start":{"line":10,"column":3},"end":{"line":10,"column":16}},{"start":{"line":10,"column":21},"end":{"line":10,"column":63}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/OperationMode.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/OperationMode.ts"],"names":[],"mappings":";;;AAAA,IAAY,aAKX;AALD,WAAY,aAAa;IACrB,8BAAa,CAAA;IACb,qDAAoC,CAAA;IACpC,2CAA0B,CAAA;IAC1B,6CAA4B,CAAA;AAChC,CAAC,EALW,aAAa,6BAAb,aAAa,QAKxB","sourcesContent":["export enum OperationMode {\n    Chat = 'chat',\n    PairProgramming = 'pair-programming',\n    CodeReview = 'code-review',\n    PlanReflect = 'plan-reflect'\n}\n\nexport interface ModeConfiguration {\n    name: string;\n    displayName: string;\n    description: string;\n    agents: string[];\n    workflow: string;\n    permissions: string[];\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5a79f7de0a8b8796e705cca7668989123e36f842"},"/workspaces/claude-code-flow/src/ui/extension/src/types/Message.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/Message.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/Message.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/Message.ts"],"names":[],"mappings":"","sourcesContent":["export interface Message {\n    id: string;\n    role: 'user' | 'assistant' | 'system';\n    content: string;\n    timestamp: number;\n    metadata?: MessageMetadata;\n}\n\nexport interface MessageMetadata {\n    agent?: string;\n    mode?: string;\n    tokens?: number;\n    model?: string;\n    streaming?: boolean;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9c107ed9eb642d76ac720711bd98d55e87c8aea"},"/workspaces/claude-code-flow/src/ui/extension/src/types/ChatSession.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/ChatSession.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/ChatSession.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/ChatSession.ts"],"names":[],"mappings":"","sourcesContent":["import { Message } from './Message';\nimport { OperationMode } from './OperationMode';\n\nexport interface ChatSession {\n    id: string;\n    createdAt: number;\n    updatedAt: number;\n    mode: OperationMode;\n    messages: Message[];\n    metadata?: SessionMetadata;\n}\n\nexport interface SessionMetadata {\n    title?: string;\n    tags?: string[];\n    workspace?: string;\n    activeFile?: string;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5418571414bd2d38eeca2d82661d8947893cc838"},"/workspaces/claude-code-flow/src/ui/extension/src/types/Task.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/Task.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":70}},"2":{"start":{"line":5,"column":0},"end":{"line":11,"column":51}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":50}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":38}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":36}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":48}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":44}},"8":{"start":{"line":13,"column":0},"end":{"line":19,"column":57}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":38}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":45}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":42}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":36}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":42}},"14":{"start":{"line":21,"column":0},"end":{"line":26,"column":63}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":32}},"16":{"start":{"line":23,"column":4},"end":{"line":23,"column":38}},"17":{"start":{"line":24,"column":4},"end":{"line":24,"column":34}},"18":{"start":{"line":25,"column":4},"end":{"line":25,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":21},"end":{"line":11,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":1},"end":{"line":13,"column":2}},"loc":{"start":{"line":13,"column":23},"end":{"line":19,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":1},"end":{"line":21,"column":2}},"loc":{"start":{"line":21,"column":25},"end":{"line":26,"column":1}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":3},"end":{"line":11,"column":49}},"type":"binary-expr","locations":[{"start":{"line":11,"column":3},"end":{"line":11,"column":11}},{"start":{"line":11,"column":16},"end":{"line":11,"column":48}}],"line":11},"1":{"loc":{"start":{"line":19,"column":3},"end":{"line":19,"column":55}},"type":"binary-expr","locations":[{"start":{"line":19,"column":3},"end":{"line":19,"column":13}},{"start":{"line":19,"column":18},"end":{"line":19,"column":54}}],"line":19},"2":{"loc":{"start":{"line":26,"column":3},"end":{"line":26,"column":61}},"type":"binary-expr","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":15}},{"start":{"line":26,"column":20},"end":{"line":26,"column":60}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1},"f":{"0":1,"1":1,"2":1},"b":{"0":[1,1],"1":[1,1],"2":[1,1]},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/Task.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/Task.ts"],"names":[],"mappings":";;;AAgBA,IAAY,QAMX;AAND,WAAY,QAAQ;IAChB,6CAAiC,CAAA;IACjC,iCAAqB,CAAA;IACrB,+BAAmB,CAAA;IACnB,2CAA+B,CAAA;IAC/B,uCAA2B,CAAA;AAC/B,CAAC,EANW,QAAQ,wBAAR,QAAQ,QAMnB;AAED,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,iCAAmB,CAAA;IACnB,wCAA0B,CAAA;IAC1B,qCAAuB,CAAA;IACvB,+BAAiB,CAAA;IACjB,qCAAuB,CAAA;AAC3B,CAAC,EANW,UAAU,0BAAV,UAAU,QAMrB;AAED,IAAY,YAKX;AALD,WAAY,YAAY;IACpB,2BAAW,CAAA;IACX,iCAAiB,CAAA;IACjB,6BAAa,CAAA;IACb,qCAAqB,CAAA;AACzB,CAAC,EALW,YAAY,4BAAZ,YAAY,QAKvB","sourcesContent":["export interface Task {\n    id: string;\n    type: TaskType;\n    title: string;\n    description: string;\n    assignedAgent?: string;\n    parentTask?: string;\n    subtasks?: Task[];\n    status: TaskStatus;\n    priority: TaskPriority;\n    createdAt: number;\n    updatedAt: number;\n    result?: any;\n    error?: string;\n}\n\nexport enum TaskType {\n    Implementation = 'implementation',\n    Analysis = 'analysis',\n    Testing = 'testing',\n    Documentation = 'documentation',\n    Refactoring = 'refactoring'\n}\n\nexport enum TaskStatus {\n    Pending = 'pending',\n    InProgress = 'in-progress',\n    Completed = 'completed',\n    Failed = 'failed',\n    Cancelled = 'cancelled'\n}\n\nexport enum TaskPriority {\n    Low = 'low',\n    Medium = 'medium',\n    High = 'high',\n    Critical = 'critical'\n}\n\nexport interface TaskResult {\n    taskId: string;\n    status: TaskStatus;\n    output?: any;\n    error?: string;\n    duration: number;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9b034f2bee2bf3537070d78168d5b05c4787ad21"},"/workspaces/claude-code-flow/src/ui/extension/src/types/SystemEvent.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/SystemEvent.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":0},"end":{"line":25,"column":54}},"3":{"start":{"line":7,"column":4},"end":{"line":7,"column":49}},"4":{"start":{"line":8,"column":4},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":55}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":45}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":47}},"8":{"start":{"line":13,"column":4},"end":{"line":13,"column":49}},"9":{"start":{"line":14,"column":4},"end":{"line":14,"column":47}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":51}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":45}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":47}},"13":{"start":{"line":19,"column":4},"end":{"line":19,"column":51}},"14":{"start":{"line":20,"column":4},"end":{"line":20,"column":45}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":54}},"16":{"start":{"line":23,"column":4},"end":{"line":23,"column":49}},"17":{"start":{"line":24,"column":4},"end":{"line":24,"column":58}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":22},"end":{"line":25,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":3},"end":{"line":25,"column":52}},"type":"binary-expr","locations":[{"start":{"line":25,"column":3},"end":{"line":25,"column":12}},{"start":{"line":25,"column":17},"end":{"line":25,"column":51}}],"line":25}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/SystemEvent.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/SystemEvent.ts"],"names":[],"mappings":";;;AAQA,IAAY,SAuBX;AAvBD,WAAY,SAAS;IACjB,eAAe;IACf,4CAA+B,CAAA;IAC/B,4CAA+B,CAAA;IAC/B,kDAAqC,CAAA;IACrC,wCAA2B,CAAA;IAE3B,cAAc;IACd,0CAA6B,CAAA;IAC7B,4CAA+B,CAAA;IAC/B,0CAA6B,CAAA;IAC7B,8CAAiC,CAAA;IACjC,wCAA2B,CAAA;IAE3B,cAAc;IACd,0CAA6B,CAAA;IAC7B,8CAAiC,CAAA;IACjC,wCAA2B,CAAA;IAE3B,gBAAgB;IAChB,iDAAoC,CAAA;IACpC,4CAA+B,CAAA;IAC/B,qDAAwC,CAAA;AAC5C,CAAC,EAvBW,SAAS,yBAAT,SAAS,QAuBpB","sourcesContent":["export interface SystemEvent {\n    id: string;\n    type: EventType;\n    source: string;\n    timestamp: number;\n    payload: any;\n}\n\nexport enum EventType {\n    // Agent events\n    AGENT_SPAWNED = 'agent.spawned',\n    AGENT_MESSAGE = 'agent.message',\n    AGENT_TERMINATED = 'agent.terminated',\n    AGENT_ERROR = 'agent.error',\n    \n    // Task events\n    TASK_CREATED = 'task.created',\n    TASK_ASSIGNED = 'task.assigned',\n    TASK_STARTED = 'task.started',\n    TASK_COMPLETED = 'task.completed',\n    TASK_FAILED = 'task.failed',\n    \n    // Tool events\n    TOOL_INVOKED = 'tool.invoked',\n    TOOL_COMPLETED = 'tool.completed',\n    TOOL_FAILED = 'tool.failed',\n    \n    // System events\n    MODE_CHANGED = 'system.mode_changed',\n    ERROR_OCCURRED = 'system.error',\n    MEMORY_UPDATED = 'system.memory_updated'\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7dd858b495ed7be97018920f8057733fe31e6080"},"/workspaces/claude-code-flow/src/ui/extension/src/types/Agent.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/Agent.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":5,"column":0},"end":{"line":12,"column":54}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":45}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":45}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":35}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":41}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":37}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":41}},"9":{"start":{"line":14,"column":0},"end":{"line":20,"column":57}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":32}},"11":{"start":{"line":16,"column":4},"end":{"line":16,"column":36}},"12":{"start":{"line":17,"column":4},"end":{"line":17,"column":40}},"13":{"start":{"line":18,"column":4},"end":{"line":18,"column":38}},"14":{"start":{"line":19,"column":4},"end":{"line":19,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":22},"end":{"line":12,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":1},"end":{"line":14,"column":2}},"loc":{"start":{"line":14,"column":23},"end":{"line":20,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":3},"end":{"line":12,"column":52}},"type":"binary-expr","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":12}},{"start":{"line":12,"column":17},"end":{"line":12,"column":51}}],"line":12},"1":{"loc":{"start":{"line":20,"column":3},"end":{"line":20,"column":55}},"type":"binary-expr","locations":[{"start":{"line":20,"column":3},"end":{"line":20,"column":13}},{"start":{"line":20,"column":18},"end":{"line":20,"column":54}}],"line":20}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1,"1":1},"b":{"0":[1,1],"1":[1,1]},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/Agent.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/Agent.ts"],"names":[],"mappings":";;;AAUA,IAAY,SAOX;AAPD,WAAY,SAAS;IACjB,wCAA2B,CAAA;IAC3B,wCAA2B,CAAA;IAC3B,8BAAiB,CAAA;IACjB,oCAAuB,CAAA;IACvB,gCAAmB,CAAA;IACnB,oCAAuB,CAAA;AAC3B,CAAC,EAPW,SAAS,yBAAT,SAAS,QAOpB;AAUD,IAAY,UAMX;AAND,WAAY,UAAU;IAClB,2BAAa,CAAA;IACb,+BAAiB,CAAA;IACjB,mCAAqB,CAAA;IACrB,iCAAmB,CAAA;IACnB,6BAAe,CAAA;AACnB,CAAC,EANW,UAAU,0BAAV,UAAU,QAMrB","sourcesContent":["export interface Agent {\n    id: string;\n    role: AgentRole;\n    name: string;\n    status: AgentStatus;\n    capabilities: string[];\n    createdAt: number;\n    lastActive: number;\n}\n\nexport enum AgentRole {\n    Coordinator = 'coordinator',\n    Implementer = 'implementer',\n    Tester = 'tester',\n    Reflector = 'reflector',\n    Analyst = 'analyst',\n    Assistant = 'assistant'\n}\n\nexport interface AgentStatus {\n    id: string;\n    role: AgentRole;\n    state: AgentState;\n    currentTask?: string;\n    completedTasks: number;\n}\n\nexport enum AgentState {\n    Idle = 'idle',\n    Active = 'active',\n    Thinking = 'thinking',\n    Waiting = 'waiting',\n    Error = 'error'\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a27c7b38576f5a7c975791dcce472da1b5cfbe60"},"/workspaces/claude-code-flow/src/ui/extension/src/types/Tool.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/Tool.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/Tool.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/Tool.ts"],"names":[],"mappings":"","sourcesContent":["export interface Tool {\n    name: string;\n    description: string;\n    parameters: ToolParameter[];\n    execute: (args: any) => Promise<ToolResult>;\n}\n\nexport interface ToolParameter {\n    name: string;\n    type: 'string' | 'number' | 'boolean' | 'object' | 'array';\n    description: string;\n    required: boolean;\n    default?: any;\n}\n\nexport interface ToolResult {\n    success: boolean;\n    output?: any;\n    error?: string;\n    duration: number;\n}\n\nexport interface ToolInvocation {\n    id: string;\n    tool: string;\n    action: string;\n    args: any;\n    result?: ToolResult;\n    timestamp: number;\n    duration?: number;\n    permitted: boolean;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2ed30bc89319010412e84d0d89c67ca46cd859e0"},"/workspaces/claude-code-flow/src/ui/extension/src/types/Permission.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/Permission.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":72}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":49}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":41}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":49}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":28},"end":{"line":9,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":3},"end":{"line":9,"column":70}},"type":"binary-expr","locations":[{"start":{"line":9,"column":3},"end":{"line":9,"column":18}},{"start":{"line":9,"column":23},"end":{"line":9,"column":69}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/Permission.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/Permission.ts"],"names":[],"mappings":";;;AAAA,IAAY,eAIX;AAJD,WAAY,eAAe;IACvB,4CAAyB,CAAA;IACzB,oCAAiB,CAAA;IACjB,4CAAyB,CAAA;AAC7B,CAAC,EAJW,eAAe,+BAAf,eAAe,QAI1B","sourcesContent":["export enum PermissionLevel {\n    Restricted = 'restricted',\n    Normal = 'normal',\n    Autonomous = 'autonomous'\n}\n\nexport interface Permission {\n    action: string;\n    resource: string;\n    level: PermissionLevel;\n}\n\nexport interface PermissionRequest {\n    id: string;\n    action: string;\n    resource: string;\n    reason: string;\n    timestamp: number;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ed43b75feaefc6eda41c74659642d1da8295d8e7"},"/workspaces/claude-code-flow/src/ui/extension/src/types/Memory.ts":{"path":"/workspaces/claude-code-flow/src/ui/extension/src/types/Memory.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/workspaces/claude-code-flow/src/ui/extension/src/types/Memory.ts","sources":["/workspaces/claude-code-flow/src/ui/extension/src/types/Memory.ts"],"names":[],"mappings":"","sourcesContent":["export interface Context {\n    id: string;\n    content: string;\n    source: string;\n    relevance: number;\n    tokens: number;\n    timestamp: number;\n    metadata?: ContextMetadata;\n}\n\nexport interface ContextMetadata {\n    type: 'code' | 'documentation' | 'conversation' | 'web';\n    language?: string;\n    file?: string;\n    url?: string;\n}\n\nexport interface SearchResult {\n    id: string;\n    content: string;\n    score: number;\n    source: string;\n    metadata?: any;\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"69136ef6f2dc584f2c4dcd0f16cb8f78f08412d5"}}