import { TSESTree } from '../ts-estree.js';
import { PatternVisitorCallback, PatternVisitorOptions, Visitor } from './Options.js';
import { ScopeManager } from './ScopeManager.js';
interface PatternVisitor extends Visitor {
    options: PatternVisitorOptions;
    scopeManager: ScopeManager;
    parent?: TSESTree.Node;
    rightHandNodes: TSESTree.Node[];
constructor(pattern: TSESTree.Node): void;
constructor(property: TSESTree.Node): void;
constructor(pattern: TSESTree.Node): void;
constructor(pattern: TSESTree.Node): void;
constructor(pattern: TSESTree.Node): void;
constructor(node: TSESTree.Node): void;
constructor(node: TSESTree.Node): void;
constructor(node: TSESTree.Node): void;
constructor(node: TSESTree.Node): void;
constructor(node: TSESTree.Node): void;
}
declare const PatternVisitor: {
    new (options: PatternVisitorOptions, rootPattern: TSESTree.BaseNode, _callback: PatternVisitorCallback): PatternVisitor;
constructor(node: TSESTree.Node): boolean;
};
export { PatternVisitor };
//# sourceMappingURL=PatternVisitor.d.ts.map