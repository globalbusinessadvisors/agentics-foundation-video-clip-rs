import { Dictionary } from './common-types.js';
import { YargsInstance } from './yargs.js';
import { YError } from './yerror.js';
import { Y18N } from 'y18n';
export declare function usage(yargs: YargsInstance, y18n: Y18N): UsageInstance;
/** Instance of the usage module. */
export interface UsageInstance {
constructor(): void;
constructor(): void;
constructor(cmd: string, description: string | undefined, isDefault: boolean, aliases: string[], deprecated?: boolean): void;
constructor(str: string): string;
constructor(keys: string | string[] | Dictionary<string>, desc?: string): void;
constructor(msg: string): void;
constructor(cmd: string, description?: string): void;
constructor(msg?: string | null, err?: YError | string): void;
constructor(f: FailureFunction): void;
constructor(): void;
constructor(fn: {
        name?: string;
    }): string;
constructor(): [string, string, boolean, string[], boolean][];
constructor(): Dictionary<string | undefined>;
constructor(): string;
constructor(): [string, string][];
constructor(): boolean;
constructor(): string;
constructor(localLookup: Dictionary<boolean>): UsageInstance;
constructor(level: 'error' | 'log' | ((message: string) => void)): void;
constructor(enabled?: boolean | string, message?: string): UsageInstance;
constructor(): void;
constructor(values?: any[], separator?: string): string;
constructor(): void;
constructor(msg: string | null, description?: string | false): UsageInstance;
constructor(ver: any): void;
constructor(cols: number | null | undefined): void;
}
export interface FailureFunction {
    (msg: string | undefined | null, err: YError | string | undefined, usage: UsageInstance): void;
}
export interface FrozenUsageInstance {
    failMessage: string | undefined | null;
    failureOutput: boolean;
    usages: [string, string][];
    usageDisabled: boolean;
    epilogs: string[];
    examples: [string, string][];
    commands: [string, string, boolean, string[], boolean][];
    descriptions: Dictionary<string | undefined>;
}
